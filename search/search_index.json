{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Doglang \u2014 The Playful Language for Programmers with a Woof!","text":"<p>Imagine a programming language inspired by the joyful spirit and playful nature of our canine companions. Doglang is not just any interpreter \u2014 it's a fun-filled, tail-wagging experience that turns coding into a game where commands speak \u201cdog\u201d. With <code>bark</code> to print your messages, <code>wagtail</code> to loop endlessly in joy, and <code>sniff</code> for curious conditionals, Doglang invites developers to fetch creativity and sniff out new programming horizons.</p> <p>Built as an interpreted language for beginners and pros alike, Doglang takes you on a walk through core programming concepts with a furry twist. Whether you're chasing variables, digging through loops, or fetching input, every line of code barks with personality.</p> <p>Join this pack of enthusiastic coders as Doglang grows into a powerful yet playful language designed to keep learning entertaining. Let\u2019s unleash the dog lover in every programmer and make coding as fun as a day at the dog park!</p>"},{"location":"CONTRIBUTING/","title":"Contributing to Doglang Documentation","text":"<p>Thank you for your interest in improving Doglang! We welcome contributions from everyone, whether you are fixing typos, clarifying explanations, or adding new sections.</p> <p>Here\u2019s how you can help:</p>"},{"location":"CONTRIBUTING/#editing-documentation","title":"Editing Documentation","text":"<p>All documentation files are Markdown (<code>.md</code>) files located inside the <code>/docs</code> folder in the repository.</p> <ul> <li>To make changes, simply edit the relevant <code>.md</code> files.</li> <li>You can add new files or update existing ones to improve clarity, add examples, or fix mistakes.</li> </ul>"},{"location":"CONTRIBUTING/#previewing-documentation-locally","title":"Previewing Documentation Locally","text":"<p>Before submitting your changes, it\u2019s a good idea to preview how the documentation will look on the website.</p> <ol> <li> <p>Install MkDocs if you haven\u2019t already: <pre><code>pip install mkdocs\n</code></pre></p> </li> <li> <p>From the project root directory, run: <pre><code>mkdocs serve\n</code></pre></p> </li> <li> <p>Open your browser at http://127.0.0.1:8000/ to see a live preview.</p> </li> </ol> <p>When you save your Markdown files, the preview will update automatically.</p>"},{"location":"CONTRIBUTING/#submitting-changes","title":"Submitting Changes","text":"<ol> <li>Fork the Doglang repository to your own GitHub account.</li> <li>Create a branch for your changes (e.g., <code>improve-docs</code>).</li> <li>Make your edits and commit them with clear messages.</li> <li>Push your branch to your fork.</li> <li>Open a Pull Request (PR) from your branch to the original repository\u2019s <code>main</code> branch.</li> </ol> <p>We review all pull requests promptly and provide feedback if necessary.</p>"},{"location":"CONTRIBUTING/#reporting-issues-or-suggesting-features","title":"Reporting Issues or Suggesting Features","text":"<p>If you find errors, have questions, or want to suggest new documentation topics or features, please open an issue on the Doglang GitHub repository.</p> <p>Provide as much detail as possible so we can address your concern quickly.</p>"},{"location":"CONTRIBUTING/#our-commitment","title":"Our Commitment","text":"<p>We believe in open and collaborative documentation to help everyone learn Doglang easily. Your feedback and contributions make this project better for the whole community!</p> <p>Thank you for being part of the Doglang pack!</p> <p>Happy coding and documenting! \ud83d\udc3e</p>"},{"location":"faq/","title":"Frequently Asked Questions (FAQ)","text":""},{"location":"faq/#what-file-extension-do-doglang-programs-use","title":"What file extension do Doglang programs use?","text":"<p>Doglang source code files use the <code>.doggy</code> extension.</p>"},{"location":"faq/#how-do-i-run-a-doglang-program","title":"How do I run a Doglang program?","text":"<p>After installing Doglang, run: <pre><code>doglang -f your_program.doggy\n</code></pre></p> <p>You can also execute inline code with the <code>-e</code> option: <pre><code>doglang -e \"a = 10; bark(a);\"\n</code></pre></p> <p>For more installation options, see the Installation Guide.</p>"},{"location":"faq/#what-data-types-does-doglang-support","title":"What data types does Doglang support?","text":"<p>Currently, Doglang supports only integers and strings.</p>"},{"location":"faq/#are-functions-supported-in-doglang","title":"Are functions supported in Doglang?","text":"<p>No, Doglang does not yet support user-defined functions or procedures. However, this is a planned feature! Check out <code>examples/Ideas.md</code> for upcoming features.</p>"},{"location":"faq/#how-does-doglang-handle-errors","title":"How does Doglang handle errors?","text":"<p>Doglang provides error messages for syntax, semantic, and runtime errors. Error handling is continuously being improved to provide better debugging information.</p>"},{"location":"faq/#can-i-contribute-to-doglang","title":"Can I contribute to Doglang?","text":"<p>Absolutely! Contributions are welcome from users of all experience levels. You can:</p> <ul> <li>Improve or add features</li> <li>Fix bugs</li> <li>Enhance the documentation</li> <li>Suggest new dog-themed commands or capabilities</li> </ul> <p>See the Contributing Guide for details on submitting pull requests and reporting issues.</p>"},{"location":"faq/#where-can-i-find-more-documentation","title":"Where can I find more documentation?","text":"<p>Full documentation and usage examples are available online at:</p> <p>https://pallavrai.github.io/Doglang</p>"},{"location":"faq/#how-do-i-view-tokens-for-debugging","title":"How do I view tokens for debugging?","text":"<p>Use the <code>--tokens</code> flag to see the tokenized output: <pre><code>doglang -f your_program.doggy --tokens\n</code></pre></p>"},{"location":"faq/#can-i-use-doglang-in-a-virtual-environment","title":"Can I use Doglang in a virtual environment?","text":"<p>Yes! It's recommended to use a virtual environment: <pre><code>python -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\npip install doglang\n</code></pre></p>"},{"location":"faq/#what-python-version-does-doglang-require","title":"What Python version does Doglang require?","text":"<p>Doglang requires Python 3.6 or higher.</p>"},{"location":"faq/#who-created-doglang","title":"Who created Doglang?","text":"<p>Doglang is a fun open-source project created by Pallav Rai to bring a playful spin to learning programming and language design.</p>"},{"location":"faq/#how-do-i-uninstall-doglang","title":"How do I uninstall Doglang?","text":"<p>Simply run: <pre><code>pip uninstall doglang\n</code></pre></p> <p>If you have other questions, feel free to open an issue on the GitHub repository.</p>"},{"location":"features/","title":"Overview of language features","text":"<p>Doglang combines a fun dog-inspired syntax with core programming constructs to make coding enjoyable and easy to learn. Below is an overview of its main features:</p>"},{"location":"features/#core-language-constructs","title":"Core Language Constructs","text":"<ul> <li> <p>Variable Assignment   Assign values to variables without explicit type declarations: <pre><code>a = 10;\n</code></pre></p> </li> <li> <p>Print Statement (<code>bark</code>) Print values or messages to the console: <pre><code>bark(\"Hello, Doglang!\");\nbark(a);\n</code></pre></p> </li> <li> <p>Loops (<code>wagtail</code>) Loop while a condition is true: <pre><code>wagtail(a &lt; 5) {\nbark(a);\na = a + 1;\n}\n</code></pre></p> </li> <li> <p>Conditionals (<code>sniff</code> / <code>else</code>) Branch execution based on conditions: <pre><code>sniff(a == 10) {\nbark(\"Ten!\");\n} else {\nbark(\"Not ten.\");\n}\n</code></pre></p> </li> <li> <p>Input (<code>fetch</code>) Get user input during program execution: <pre><code>name = fetch(\"Enter your name: \");\n</code></pre></p> </li> </ul>"},{"location":"features/#supported-operators","title":"Supported Operators","text":"<ul> <li> <p>Arithmetic: <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code></p> </li> <li> <p>Comparison: <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code></p> </li> <li> <p>Assignment: <code>=</code></p> </li> </ul>"},{"location":"features/#file-extension","title":"File Extension","text":"<ul> <li>Doglang source files use the <code>.doggy</code> extension.</li> </ul>"},{"location":"features/#limitations","title":"Limitations","text":"<ul> <li>Currently supports only integer and string data types.</li> <li>No functions or user-defined procedures yet.</li> <li>Basic error reporting without detailed debug info.</li> </ul>"},{"location":"features/#tips-for-writing-doglang-code","title":"Tips for Writing Doglang Code","text":"<ul> <li>End each statement with a semicolon (<code>;</code>).</li> <li>Enclose code blocks in curly braces <code>{}</code>.</li> <li>Variables are dynamically typed (no need to declare type).</li> </ul> <p>Doglang is actively evolving, and new features are planned. Contributions and suggestions are always welcome!</p>"},{"location":"installation/","title":"Installation and setup instructions","text":"<p>Welcome to Doglang! Follow the instructions below to get started quickly with installing and running Doglang on your machine.</p>"},{"location":"installation/#option-1-install-from-pypi-recommended","title":"Option 1: Install from PyPI (Recommended)","text":"<p>The easiest way to install Doglang is via Python's package manager <code>pip</code>. This option installs Doglang globally so you can run it from the command line anywhere.</p>"},{"location":"installation/#requirements","title":"Requirements","text":"<ul> <li>Python 3.6 or higher</li> <li>pip installed (usually included with Python)</li> </ul>"},{"location":"installation/#installation-command","title":"Installation Command","text":"<p>Open your terminal or command prompt and run: <pre><code>pip install doglang\n</code></pre></p>"},{"location":"installation/#verify-installation","title":"Verify Installation","text":"<p>To verify Doglang was installed successfully, run: <pre><code>doglang --help\n</code></pre></p> <p>This should display the Doglang command line usage information.</p>"},{"location":"installation/#option-2-install-from-github-repository","title":"Option 2: Install from GitHub Repository","text":"<p>You can install Doglang directly from the GitHub repository.</p>"},{"location":"installation/#method-a-direct-install-from-github","title":"Method A: Direct Install from GitHub","text":"<p>Install directly using pip: <pre><code>pip install git+https://github.com/Pallavrai/Doglang.git\n</code></pre></p>"},{"location":"installation/#method-b-clone-and-install-locally","title":"Method B: Clone and Install Locally","text":"<ol> <li> <p>Clone the repository: <pre><code>git clone https://github.com/Pallavrai/Doglang.git\n</code></pre></p> </li> <li> <p>Change into the project directory: <pre><code>cd doglang\n</code></pre></p> </li> <li> <p>Install the package: <pre><code>pip install .\n</code></pre></p> </li> </ol> <p>For development (editable install): <pre><code>pip install -e .\n</code></pre></p> <p>This allows you to make changes to the source code and see them reflected immediately without reinstalling.</p>"},{"location":"installation/#verify-installation_1","title":"Verify Installation","text":"<p>After installation, verify it works: <pre><code>doglang --help\n</code></pre></p>"},{"location":"installation/#running-doglang-programs","title":"Running Doglang Programs","text":"<p>Once installed (via any method above), use the <code>doglang</code> command:</p>"},{"location":"installation/#running-a-program-from-a-file","title":"Running a program from a file","text":"<pre><code>doglang -f your_program.doggy\n</code></pre>"},{"location":"installation/#running-code-directly-from-command-line","title":"Running code directly from command line","text":"<p>Execute inline commands: <pre><code>doglang -e \"a = 10; bark(a);\"\n</code></pre></p>"},{"location":"installation/#example-with-sample-files","title":"Example with sample files","text":"<p>Try the included examples: <pre><code>doglang -f examples/prog1.doggy\ndoglang -f examples/conditions.doggy\n</code></pre></p>"},{"location":"installation/#additional-options","title":"Additional Options","text":""},{"location":"installation/#view-tokens-for-debugging","title":"View Tokens (for debugging)","text":"<p>To see the tokens generated from your code: <pre><code>doglang -f your_program.doggy --tokens\n</code></pre></p>"},{"location":"installation/#help-command","title":"Help Command","text":"<p>View all available options: <pre><code>doglang --help\n</code></pre></p>"},{"location":"installation/#using-a-virtual-environment-recommended","title":"Using a Virtual Environment (Recommended)","text":"<p>It's good practice to use a virtual environment:</p> <pre><code># Create virtual environment\npython -m venv venv\n\n# Activate it\n# On macOS/Linux:\nsource venv/bin/activate\n# On Windows:\nvenv\\Scripts\\activate\n\n# Install Doglang\npip install doglang\n# OR install from local clone\npip install .\n\n# When done, deactivate\ndeactivate\n</code></pre>"},{"location":"installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"installation/#command-not-found","title":"Command Not Found","text":"<p>If <code>doglang</code> command is not found after installation:</p> <ol> <li>Make sure pip's bin directory is in your PATH</li> <li> <p>Try using the full path:    <pre><code>python -m doglang.cli -f your_program.doggy\n</code></pre></p> </li> <li> <p>Or reinstall with:    <pre><code>pip install --force-reinstall doglang\n</code></pre></p> </li> </ol>"},{"location":"installation/#permission-errors","title":"Permission Errors","text":"<p>On some systems, you might need to use <code>pip install --user</code>: <pre><code>pip install --user doglang\n</code></pre></p> <p>Or use <code>sudo</code> (not recommended): <pre><code>sudo pip install doglang\n</code></pre></p>"},{"location":"installation/#import-errors","title":"Import Errors","text":"<p>If you get import errors, ensure you're in the correct directory and the package is properly installed: <pre><code>pip show doglang  # Check if installed\npip install --upgrade doglang  # Upgrade to latest version\n</code></pre></p>"},{"location":"installation/#notes","title":"Notes","text":"<ul> <li>Doglang source files use the <code>.doggy</code> extension</li> <li>Make sure your Python version is 3.6 or higher: <code>python --version</code></li> <li>The <code>doglang</code> command is available globally after installation</li> <li>No need to run <code>python doglang.py</code> - that file doesn't exist as an entry point</li> <li>If you encounter issues, check your Python and pip versions or raise an issue in the GitHub repo</li> </ul>"},{"location":"installation/#uninstalling","title":"Uninstalling","text":"<p>To remove Doglang: <pre><code>pip uninstall doglang\n</code></pre></p> <p>Enjoy coding with Doglang! \ud83d\udc3e</p>"},{"location":"usage/","title":"Usage examples with code snippets","text":"<p>This section provides basic examples to help you get started with writing Doglang programs.</p>"},{"location":"usage/#variable-assignment","title":"Variable Assignment","text":"<p>Assign a value to a variable using the equals sign (<code>=</code>): <pre><code>a = 10 ;\n</code></pre></p>"},{"location":"usage/#print-statement-bark","title":"Print Statement (<code>bark</code>)","text":"<p>Use the <code>bark</code> command to print values or messages: <pre><code>bark(a);\nbark(\"Hello, Doglang!\");\n</code></pre></p>"},{"location":"usage/#loop-statement-wagtail","title":"Loop Statement (<code>wagtail</code>)","text":"<p>The <code>wagtail</code> keyword starts a loop which runs while the condition is true: <pre><code>a = 0;\nwagtail(a &lt; 5) {\nbark(a);\na = a + 1;\n}\n</code></pre></p> <p>This loops from 0 to 4, printing each value.</p>"},{"location":"usage/#conditional-statement-sniff","title":"Conditional Statement (<code>sniff</code>)","text":"<p>Use <code>sniff</code> to check conditions and optionally <code>else</code> for alternate execution: <pre><code>a = 10;\nsniff(a % 2 == 0) {\nbark(\"Even\");\n} else {\nbark(\"Odd\");\n}\n</code></pre></p> <p>This prints \"Even\" if <code>a</code> is even, otherwise prints \"Odd\".</p>"},{"location":"usage/#input-statement-fetch","title":"Input Statement (<code>fetch</code>)","text":"<p>Prompt the user for input using <code>fetch</code>: <pre><code>name = fetch(\"Enter your name: \");\nbark(\"Hello, \" + name + \"!\");\n</code></pre></p>"},{"location":"usage/#running-doglang-code-from-command-line","title":"Running Doglang Code from Command Line","text":""},{"location":"usage/#from-file","title":"From File","text":"<pre><code>doglang -f your_program.doggy\n</code></pre>"},{"location":"usage/#inline-code-execution","title":"Inline Code Execution","text":"<pre><code>doglang -e \"a = 10; bark(a);\"\n</code></pre> <p>Explore these examples and start creating your own fun Doglang programs!</p>"}]}